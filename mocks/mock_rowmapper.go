// Code generated by MockGen. DO NOT EDIT.
// Source: dbservice/rowmapper.go
//
// Generated by this command:
//
//	mockgen -source=dbservice/rowmapper.go RowMapper
//
// Package mock_dbservice is a generated GoMock package.
package mocks

import (
	model "go-demo-svc/model"
	reflect "reflect"

	pgx "github.com/jackc/pgx/v5"
	gomock "go.uber.org/mock/gomock"
)

// MockRowMapper is a mock of RowMapper interface.
type MockRowMapper struct {
	ctrl     *gomock.Controller
	recorder *MockRowMapperMockRecorder
}

// MockRowMapperMockRecorder is the mock recorder for MockRowMapper.
type MockRowMapperMockRecorder struct {
	mock *MockRowMapper
}

// NewMockRowMapper creates a new mock instance.
func NewMockRowMapper(ctrl *gomock.Controller) *MockRowMapper {
	mock := &MockRowMapper{ctrl: ctrl}
	mock.recorder = &MockRowMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRowMapper) EXPECT() *MockRowMapperMockRecorder {
	return m.recorder
}

// RowsToOrders mocks base method.
func (m *MockRowMapper) RowsToOrders(arg0 pgx.Rows) ([]model.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RowsToOrders", arg0)
	ret0, _ := ret[0].([]model.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RowsToOrders indicates an expected call of RowsToOrders.
func (mr *MockRowMapperMockRecorder) RowsToOrders(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RowsToOrders", reflect.TypeOf((*MockRowMapper)(nil).RowsToOrders), arg0)
}
